openapi: 3.0.1
info:
  title: "COPY OF INSTAGRAM"
  description: ":)"
  version: 1.0.0


tags:
  - name: stories
    description: ""

paths:
  /stories/{user_id}:
    get:
      tags:
        - stories
      summary: get stories
      description: "Получение списка стоирис по ID пользователя"
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: list of stories
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Story'
    put:
      tags:
        - stories
      summary: view story
      description: "Отметка, что сторис просмотрена"
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: id
          in: query
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: list of stories
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Story'
                  
  /stories:
    get:
      tags:
        - stories
      summary: get subscribe users stories
      description: "Получение списка сторис исходя из подписок. Один объект хранит в себе список возможных медиа-типов и количество сторис"
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/StoryFeed'
    post:
      tags:
        - stories
      summary: create story
      description: "Создание сторис"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
            example:
              url: "https://www.gameartguppy.com/wp-content/uploads/2017/06/food-drink-coffee-cup.png"
              type: "IMAGE"
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Story'
        '504':
          description: "Ограничение на максимальное количество сторис в день"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorStoryMaxDay'
                
    delete:
      tags:
        - stories
      summary: delete story
      description: "Удаление сторис"
      parameters:
        - name: story_id
          in: query
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/DeletedStory'

        '504':
          description: "Невозможно удалить сторис, если он не принадлежит владельцу"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorStoryDelete'
                
  /stories/viewers:
    get:
      tags:
        - stories
      summary: viewers of story
      description: "Список просмотревших сторис"
      parameters:
        - name: story_id
          in: query
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/ViewerStories'

        '504':
          description: "Невозможно удалить сторис, если он не принадлежит владельцу"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorStoryDelete'

components:
  schemas:
    Story:
      type: object
      required:
        - id
        - submit_id
        - date_timestamp
        - url
        - type
        - viewed
      properties:
        id:
          type: integer
          example: 55
        submit_id:
          type: integer
          example: 14
        date_timestamp:
          type: integer
          example: 1651725065
        url:
          type: string
          example: "https://www.gameartguppy.com/wp-content/uploads/2017/06/food-drink-coffee-cup.png"
        type:
          type: string
          example: "IMAGE"
        viewed:
          type: boolean
          example: false
          
    StoryFeed:
      type: object
      required:
        - submit_id
        - username
        - username_profile_img_url
        - types
        - amount
        - viewed_all
      properties:
        submit_id:
          type: integer
          example: 14
        username:
          type: string
          example: userrrr
        username_profile_img_url:
          type: string
          example: "https://www.gameartguppy.com/wp-content/uploads/2017/06/food-drink-coffee-cup.png"
        amount:
          type: integer
          example: 5
        types:
          type: array
          items:
            type: string
          example: ["IMAGE", "LIVE", "VIDEO"]
        viewed_all:
          type: boolean
          example: false
          
    ViewerStories:
      type: object
      required:
        - id
        - username
        - username_profile_img_url
      properties:
        id:
          type: integer
          example: 14
        username:
          type: string
          example: userrrr
        username_profile_img_url:
          type: string
          example: "https://www.gameartguppy.com/wp-content/uploads/2017/06/food-drink-coffee-cup.png"
          
    DeletedStory:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Confirm"
          
    ErrorStoryMaxDay:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Error, the maximum number of posts per day is 100"
          
    ErrorStoryDelete:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Error, you don't own this Story"

